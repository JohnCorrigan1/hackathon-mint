import { GetServerSideProps, NextPage } from "next";
import Nav from "../components/Nav";
import PlayerSheetCardOwned from "../components/Player/PlayerSheetCardOwned";
import PlayerSheetItems from "../components/Player/PlayerSheetItems";
import { useState, useEffect } from "react";
import { getPlayerStats } from "../lib/SubgraphQueries";
import { useRouter } from "next/router";
import { useQuery } from "urql";
import { Player } from "../models/Player";
import Head from "next/head";


interface Props {
  id: string | string[] | undefined;
}

const AssignStats = ({ id  }: Props) => {
  const [tokenID, setTokenID] = useState<string>(id as string);
  const [query, setQuery] = useState<string>(getPlayerStats(tokenID, id as string) || "");
  const [player, setPlayer] = useState<Player | null>(null);
  const router = useRouter();
  const playerId = router.query.tokenId;
  const playerAddress = router.query.address;

  useEffect(() => {
    setTokenID(playerId as string);
    //setContractAddress(playerAddress as string);
    setQuery(getPlayerStats(tokenID, id as string));
  }, [playerId, tokenID]);

  const [result, reexecuteQuery] = useQuery({
    query,
  });

  useEffect(() => {
    const { data, fetching, error } = result;
    console.log(result);
    setPlayer(result.data?.players[0]);
  }, [result, player]);

  useEffect(() => {
    reexecuteQuery();
  }, [tokenID]);

  return (
    <>
     <Head>
        <title>Block Crawler</title>
        <meta
          name="description"
          content="Generated by @rainbow-me/create-rainbowkit"
        />
        <link rel="icon" type="image/png" href="/favicon-32x32.png" />
      </Head>
    <div className="h-[100vh] w-[100vw] bg-[#2D2424]">
      <Nav />
      <div className="flex justify-center">
        <div className="flex w-1/4 rounded-xl bg-[#D5CEA3] bg-opacity-30">
          {player && (
            <>
              <PlayerSheetCardOwned
                title={"title"}
                items={[]}
                player={player}
                image={"/wizard.png"}
              />
              {/* <PlayerSheetItems player={player} /> */}
            </>
          )}
        </div>
      </div>
    </div>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const { id } = context.query;

  return {
    props: {
      id
    },
  };
};

export default AssignStats;
